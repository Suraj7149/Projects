https://www.codewithharry.com/videos/c-tutorial-in-hindi-with-notes

history / introduction:-

- porcedural programming language
- dev. by Dennis Ritchie 1972
- made to write OS.
- low-level memory access, a simple set of keywords and a clean style.
- C++ is a superset of C language.

Structure of a C program:- 

- the only Structure to write code is 


#include<stdio.h>       // Header
int main(){             // main()

    int n = 0;          // variable declaration
    printf("%d\n",n);   // body 
    return 0;           // return
}


- Header:- 
the first and foremost component is the inclusion of the header files in 
a C program.

extension .h , contains C function declaration and macro declaration
some C Header files are:- 
stddef.h – Defines several useful types and macros.
stdint.h – Defines exact width integer types.
stdio.h – Defines core input and output functions
stdlib.h – Defines numeric conversion functions, pseudo-random network generator, memory 
           allocation
string.h – Defines string handling functions
math.h – Defines common mathematical functions

- Main method Declaration:- 
next part is to declare the main() fucntion.

- Variable Declaration:- 
declaration of variable to be used in program, they cant be used without being declared.
They are to be declared before being used.


- Body:- 
refers ot the opertation to be performed in the functions. 

- Return Statement:- 
refers to the returning of the values from a fucntion.
depends on the type of the function.
example, if the return type is void, then there will be no return statement.


Language Standards:- 
What to do when a C program produces different results in two different compilers? 


#include<stdio.h>
int main()
{
    int i = 1;
    printf("%d %d %d\n", ++i, i++, i);
    return 0;
}
2 1 3 - using g++ 4.2.1 on Linux.i686
1 2 3 - using SunStudio C++ 5.9 on Linux.i686
2 1 3 - using g++ 4.2.1 on SunOS.x86pc
1 2 3 - using SunStudio C++ 5.9 on SunOS.x86pc
1 2 3 - using g++ 4.2.1 on SunOS.sun4u
1 2 3 - using SunStudio C++ 5.9 on SunOS.sun4u
3 1 3 - using gcc 

The latest C standard is ISO/IEC 9899:2011, also known as C11 as the final draft 
was published in 2011.

C standard leaves some behavior of many C constructs as undefined and some as 
unspecified to simplify the specification and allow some flexibility in 
implementation. For example, in C the use of any automatic variable before it has 
been initialized yields undefined behavior and order of evaluations of subexpressions 
is unspecified. This specifically frees the compiler to do whatever is easiest or most 
efficient, should such a program be submitted.

What to do with programs whose behavior is undefined or unspecified in standard? 
As a programmer, it is never a good idea to use programming constructs whose 
behavior is undefined or unspecified, such programs should always be discouraged. 
The output of such programs may change with the compiler and/or machine.

